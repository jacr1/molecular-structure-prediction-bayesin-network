buildscript
{
    repositories
    {
        mavenCentral()
    }
    dependencies
    {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.1.RELEASE")
	classpath("org.ajoberstar:gradle-git:0.2.3")
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'spring-boot'

jar
{
    baseName = 'structure-prediction'
    version =  '0.1.0'
}

springBoot
{
    mainClass = 'com.index.Application'
}

repositories
{
    mavenCentral()
    jcenter()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("javax.servlet:jstl:1.2")
    runtime("mysql:mysql-connector-java")
    compile("org.springframework.boot:spring-boot-starter-jdbc")
    compile ("org.springframework.boot:spring-boot-starter-web")
    compile files('libs/jsmile_linux64/smile.jar')
    complie filrd('libs/jsmile_linux64')
    compile files('libs/rdkit/Code/JavaWrappers/gmwrapper/org.RDKit.jar')
}
/* importing the rdkit repo then to get required java wrapper out of it. Also requires swig 
build-essential python-numpy cmake python-dev sqlite3 libsqlite3-dev libboost-dev libboost-system-dev libboost-thread-dev libboost-serialization-dev libboost-python-dev libboost-regex-dev
*/
import org.ajoberstar.gradle.git.tasks.*

task cloneRDKit(type: GitClone) {
        def destination = file("libs/rdkit")
        uri = "https://github.com/rdkit/rdkit.git"
        destinationPath = destination
        bare = false
        enabled = !destination.exists() //to clone only once
}

task buildRDKit(type: Exec){
    commandLine 'bash','buildRDKit.sh'
    standardOutput = new ByteArrayOutputStream()
}

buildRDKit << {   
    print standardOutput.toString()
    if (standardOutput.toString("UTF-8") != "0\n") throw new GradleException("RDKIT failed build")  
}

build.dependsOn cloneRDKit
build.dependsOn buildRDKit
buildRDKit.dependsOn cloneRDKit
